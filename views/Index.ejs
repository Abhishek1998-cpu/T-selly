<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x"
      crossorigin="anonymous"
    />

    <!-- Custom CSS Link  -->
    <!-- <link rel="stylesheet" href="./Style/Style.css" /> -->
    <style>
      /* Importing Google Fonts  */
      @import url("https://fonts.googleapis.com/css2?family=Poppins&display=swap");

      * {
        margin: auto;
        padding: auto;
        font-family: "Poppins", sans-serif;
      }

      .navbar a {
        font-size: 20px;
        font-weight: 600;
        color: black !important;
      }

      .navbar a:hover {
        color: lightgreen !important;
      }

      .BNavbar {
        position: relative;
        float: right !important;
        width: 100% !important;
        text-align: right;
        background: linear-gradient(to top left, transparent 50%, black 0) top
            left/40px 40px no-repeat,
          white;
      }

      .BNavbar2 {
        text-align: center;
        padding: 1px;
        height: 20px;
        width: 20px;
        border-radius: 50%;
        border: 2px black solid;
        background-color: lightgreen;
        color: black;
        margin-left: -20px;
      }

      .BNavbar2 h6 {
        font-size: 10px !important;
        font-weight: 600;
      }

      .BNavbar i:hover {
        background-color: black !important;
        color: lightgreen !important;
      }

      .layout {
        background-color: white !important;
        color: white;
      }

      .Sizebutton {
        width: 50px;
        height: 50px;
        background-color: lightgray;
        border: 3px lightgray solid;
        border-radius: 50%;
      }

      .Sizebutton:hover {
        background-color: black;
        color: white;
      }

      .Star {
        margin-left: 5px;
      }

      .githubbutton {
        padding-left: 30px !important;
        padding-right: 30px !important;
        background-image: linear-gradient(white, lightgray);
        border-radius: 5px;
      }

      .githubbutton:hover {
        background-image: linear-gradient(white, lightgreen);
      }

      .OrderBy {
        font-size: 15px !important;
      }

      /* Order filter selection CSS  */

      /* The container must be positioned relative: */
      .custom-select {
        position: relative;
        font-family: Arial;
      }

      .custom-select select {
        display: none; /*hide original SELECT element: */
      }

      .select-selected {
        background-color: lightgreen;
      }

      /* Style the arrow inside the select element: */
      .select-selected:after {
        position: absolute;
        content: "";
        top: 14px;
        right: 10px;
        width: 0;
        height: 0;
        border: 6px solid transparent;
        border-color: black transparent transparent transparent;
      }

      /* Point the arrow upwards when the select box is open (active): */
      .select-selected.select-arrow-active:after {
        border-color: transparent transparent black transparent;
        top: 7px;
      }

      /* style the items (options), including the selected item: */
      .select-items div,
      .select-selected {
        /* color: #ffffff; */
        color: black;
        padding: 8px 16px;
        border: 1px solid transparent;
        border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
        cursor: pointer;
      }

      /* Style items (options): */
      .select-items {
        position: absolute;
        background-color: lightgreen;
        top: 100%;
        left: 0;
        right: 0;
        z-index: 99;
      }

      /* Hide the items when the select box is closed: */
      .select-hide {
        display: none;
      }

      .select-items div:hover,
      .same-as-selected {
        background-color: rgba(0, 0, 0, 0.1);
      }

      #special-price .grid .grid-item {
        margin-right: 1.2rem;
        margin-top: 1rem;
      }

      .Price {
        font-size: 40px;
      }

      .Addtocart {
        width: 100% !important;
      }

      .Addtocart:hover {
        background-color: lightgreen !important;
        color: black !important;
        box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.4) !important;
      }

      .line {
        color: lightgreen !important;
      }

      /* Footer Section CSS  */
      #footer {
        position: absolute;
        width: 100%;
      }

      footer {
        background: rgba(0, 0, 0, 0.815);
        overflow-x: hidden;
        padding: 14vmin 18vmin;
        margin-top: 80px;
      }

      footer p > span {
        color: #ff512f;
      }

      footer input {
        border: none !important;
      }

      footer input::placeholder {
        color: white !important;
      }

      footer .input-group .input-group-text {
        background: var(--bggradient);
        border: none;
      }

      footer .column i {
        color: lightgreen !important;
      }

      footer .column i:hover {
        color: whitesmoke !important;
      }

      .importantlinks h6:hover {
        position: relative;
        color: lightgreen !important;
        cursor: pointer;
      }

      #inputform {
        background-color: blue !important;
        width: 400px !important;
        text-align: left !important;
      }

      .subscribe input {
        color: black !important;
      }

      .subscribebutton {
        background-color: lightgreen !important;
        color: black;
        font-weight: 500;
      }

      .subscribebutton:hover {
        background-color: black !important;
        color: whitesmoke !important;
      }

      html {
        overflow: scroll;
        overflow-x: hidden;
      }
      ::-webkit-scrollbar {
        width: 0; /* Remove scrollbar space */
        background: transparent; /* Optional: just make scrollbar invisible */
      }
      /* Optional: show position indicator in red */
      ::-webkit-scrollbar-thumb {
        background: #ff0000;
      }

      .items {
        text-align: center !important;
        padding: 5px !important;
        margin: 5px !important;
        display: grid !important;
        grid-template-columns: 25% 25% 25% 25% !important;
        grid-gap: 5px !important;
        /* background-color: #ff512f !important; */
      }

      /* .NewD {
          visibility: hidden;
        } */

      .Checkbox {
        background-color: #ff0000 !important;
        color: #ff0000 !important;
        height: 50px;
        width: 50px;
      }

      .show {
        display: block;
      }

      /* Cart-Section Styling  */

      .cart-sidebar {
        position: fixed;
        right: -400px;
        /* right: 0px; */
        top: 0;
        width: 350px;
        height: 100%;
        /* background-color: lightgrey; */
        background-color: #303030;
        box-shadow: 0 0 35px #04040445;
        overflow-y: auto;
        z-index: 100;
        transition: all ease 0.5s;
      }

      .cart-sidebar .cart-title h4 {
        font-size: 20px;
        font-weight: 500;
        letter-spacing: 4px;
        padding: 40px 30px 20px;
        border-bottom: 1px solid #dbdbdb;
      }

      .cart-title {
        color: white;
        margin-top: 55px;
        margin-bottom: 45px;
      }

      .cart-sidebar .cart-body {
        padding: 30px 0;
      }

      .cart-sidebar .cart-item {
        display: inline-block;
        width: 100%;
        margin-bottom: 20px;
        padding: 0 30px;
      }

      .cart-sidebar .cart-item .cart-img {
        width: 20%;
        float: left;
      }

      .cart-sidebar .cart-item .cart-img img {
        width: 100%;
      }

      .cart-sidebar .cart-item .cart-text {
        width: 80%;
        float: left;
        padding: 0 20px;
      }

      .cart-sidebar .cart-item .cart-text span,
      .cart-sidebar .cart-item .cart-text h5 {
        font-size: 16px;
        font-weight: 500;
        letter-spacing: 3px;
        display: block;
        margin-bottom: 5px;
      }

      .cart-sidebar .cart-item .cart-text span {
        color: #ff0000;
      }

      .cart-sidebar .cart-item .cart-text .color-primary {
        color: blue;
      }

      .cart-sidebar .cart-btn {
        display: inline-block;
        width: 80%;
        text-align: center;
        text-decoration: none;
        background-color: black;
        color: white;
        font-size: 15px;
        padding: 14px 39px;
        /* letter-spacing: 4px; */
        border-radius: 20px;
        box-shadow: 0 12px 15px #00c2ff6e;
        margin: 20% 10% 0;
      }

      .cart-btn:hover {
        background-color: lightgreen;
        color: black;
      }

      .cart-btn {
        margin-bottom: 50px !important;
      }

      .cart-close-icon {
        /* background-color: green !important; */
        position: absolute;
        /* right: 30px; */
        left: 30px;
        top: 5px;
        cursor: pointer;
        color: white !important;
      }

      .Bag {
        /* color: #ff0000; */
        margin-left: 3px;
        /* transform: translateY(10px) !important;
          margin-bottom: 20px; */
      }

      .RemoveItem {
        color: lightgreen !important;
        float: right;
        margin-left: 10px;
        width: 100%;
        margin-top: 5px;
        margin-bottom: 10px;
      }

      .RemoveItem i:hover {
        color: red !important;
        box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.4) !important;
      }

      .subtotal {
        color: gray;
        display: flex;
      }

      .subtotal2 {
        text-align: right;
      }

      .ItemCounterCart {
        width: 40px;
        z-index: 109;
        height: 25px;
      }

      /* DropDown Menu  */

      .dropdown {
        position: relative;
        display: inline-block;
      }

      .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
        padding: 12px 16px;
        z-index: 1;
      }

      .dropdown:hover .dropdown-content {
        display: block;
      }

      /* For cursor pointer specific CSS property  */
      .cursor-pointer {
        cursor: pointer;
      }

      /* Media Query for MotoG4 and similar Devices 360px  */
      @media (max-width: 360px) {
        .githubbutton {
          margin-bottom: 50px;
        }

        .subscribebutton {
          margin-top: 5px;
          margin-bottom: 20px;
        }

        .followus {
          text-align: center !important;
        }

        .subscribe {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          text-align: center !important;
        }

        .Newsletter {
          text-align: center !important;
        }

        .sizebutton {
          display: flex;
          flex-direction: row !important;
          justify-content: center !important;
          align-items: center !important;
          text-align: center !important;
        }

        .items {
          text-align: center !important;
          padding: 5px !important;
          margin: 5px !important;
          display: grid !important;
          grid-template-columns: 50% 50% !important;
          grid-gap: 10px;
          /* background-color: #ff512f !important; */
        }

        .Copyright {
          text-align: center !important;
        }

        .cart-body {
          text-align: center !important;
        }

        .cart-sidebar .cart-item .cart-img {
          width: 20%;
          float: left !important;
          margin-left: 40%;
          margin-bottom: 10px;
        }
      }

      /* Media Query for iPad and similar Devices 768px  */

      @media (min-width: 361px) and (max-width: 768px) {
        .items {
          text-align: center !important;
          padding: 5px !important;
          margin: 5px !important;
          display: grid !important;
          grid-template-columns: 50% 50% !important;
          grid-gap: 10px;
        }
        .githubbutton {
          margin-bottom: 50px;
        }

        .subscribebutton {
          margin-top: 5px;
          margin-bottom: 20px;
        }

        .followus {
          text-align: center !important;
        }

        .subscribe {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          text-align: center !important;
        }

        .Newsletter {
          text-align: center !important;
        }

        .sizebutton {
          display: flex;
          flex-direction: row !important;
          justify-content: center !important;
          align-items: center !important;
          text-align: center !important;
        }
        .Copyright {
          text-align: center !important;
        }

        .footer {
          display: flex;
          flex-direction: column !important;
          text-align: center !important;
        }

        .followus {
          width: 100% !important;
          display: flex;
          flex-direction: column;
        }

        .followus i {
          margin: 5px !important;
        }
      }

      /* Size Selection input  */

      .inputbuttons {
        display: flex;
        flex-direction: row;
        justify-content: space-around;
      }

      .inputbuttons2 {
        display: flex;
        flex-direction: row;
        /* justify-content: flex-start !important; */
      }

      /* Hide the default checkbox */
      input[type="checkbox"] {
        visibility: hidden;
      }

      .geekmark {
        position: relative;
        overflow: hidden;
        height: 50px;
        width: 50px;
        background-color: lightgray;
        border-radius: 50%;
        border: 3px lightgray solid;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2),
          0 6px 20px 0 rgba(0, 0, 0, 0.19);
      }

      .inside {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
        font-size: 20px;
        font-weight: 700;
      }

      .script span:hover {
        background-color: black !important;
        color: white;
      }

      .script input:active ~ .geekmark {
        background-color: black !important;
        color: black;
      }

      .script input:checked ~ .geekmark {
        background-color: black;
        color: white !important;
      }

      .show {
        background-color: #ff512f !important;
      }
    </style>

    <title>T-Selly</title>
  </head>
  <body>
    <div class="container">
      <!-- Navbar Starts  -->

      <header>
        <nav class="navbar navbar-expand-lg navbar-dark">
          <div class="container-fluid p-2">
            <a class="navbar-brand" href="#">T-Selly</a>
            <button
              class="navbar-toggler bg-dark"
              type="button"
              data-bs-toggle="collapse"
              data-bs-target="#navbarSupportedContent"
              aria-controls="navbarSupportedContent"
              aria-expanded="false"
              aria-label="Toggle navigation"
            >
              <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
              <ul class="navbar-nav mx-auto mb-2 mb-lg-0">
                <li class="nav-item">
                  <a class="nav-link" aria-current="page" href="#">HOME</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="#">COLLECTION</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="#">NEW ARRIVAL</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="#">ONGOING OFFERS</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="#">GET HELP</a>
                </li>
              </ul>
            </div>
          </div>
        </nav>
      </header>

      <!-- Navbar Ends  -->

      <!-- Cart Icon Section Starts -->
      <section>
        <div class="container">
          <div class="BNavbar">
            <i class="fa-2x fas fa-cart-plus p-2 CartButton"></i
            ><span
              ><button class="BNavbar2">
                <h6 id="BNavbar2H62">0</h6>
              </button></span
            >
          </div>
        </div>
      </section>
      <!-- Cart Icon Section Ends  -->

      <!-- Main Layout Section Starts -->
      <!-- Below is just for creating boundary of the Cart Icon Section  -->
      <section>
        <div class="container layout">
          <h3>-</h3>
        </div>
      </section>
      <!-- Above is just for creating boundary of the Cart Icon Section  -->
      <section>
        <div class="container">
          <div class="row">
            <div class="col-lg-3">
              <!-- Sizes filter Section Starts  -->
              <h5 class="fw-bold sizebutton">Sizes:</h5>
              <div class="d-flex justify-content-start mt-3 sizebutton">
                <!-- <button
                  class="fw-bold me-2 btn2 geekmark inside"
                  data-filter="XS"
                >
                  XS
                </button> -->
                <!-- <button class="Sizebutton p-2 fw-bold me-2">S</button>
                <button class="Sizebutton p-2 fw-bold me-2">M</button>
                <button class="Sizebutton p-2 fw-bold me-2">ML</button>  -->
                <div class="inputbuttons">
                  <label class="script me-2">
                    <input
                      type="checkbox"
                      condition="XS"
                      class="btn2"
                      data-filter="XS"
                      value="off"
                    />
                    <span class="geekmark inside">XS</span>
                  </label>
                  <label class="script me-2">
                    <input
                      type="checkbox"
                      data-filter="S"
                      class="btn2"
                      value="off"
                    />
                    <span class="geekmark inside">S</span>
                  </label>
                  <label class="script me-2">
                    <input
                      type="checkbox"
                      data-filter="M"
                      class="btn2"
                      value="off"
                    />
                    <span class="geekmark inside">M</span>
                  </label>
                  <label class="script me-2">
                    <input
                      type="checkbox"
                      condition="ML"
                      class="btn2"
                      data-filter="ML"
                      value="off"
                    />
                    <span class="geekmark inside">ML</span>
                  </label>
                </div>
              </div>
              <div class="d-flex justify-content-start mt-2 sizebutton">
                <!-- <button class="Sizebutton p-2 fw-bold me-2">L</button>
                <button class="Sizebutton p-2 fw-bold me-2">XL</button>
                <button class="Sizebutton p-2 fw-bold me-2">XXL</button> -->
                <div class="inputbuttons">
                  <label class="script me-2">
                    <input
                      type="checkbox"
                      data-filter="L"
                      class="btn2"
                      value="off"
                    />
                    <span class="geekmark inside">L</span>
                  </label>
                  <label class="script me-2">
                    <input
                      type="checkbox"
                      condition="XL"
                      class="btn2"
                      data-filter="XL"
                      value="off"
                    />
                    <span class="geekmark inside">XL</span>
                  </label>
                  <label class="script me-2">
                    <input
                      type="checkbox"
                      condition="XXL"
                      class="btn2"
                      data-filter="XXL"
                      value="off"
                    />
                    <span class="geekmark inside">XXL</span>
                  </label>
                  <!-- <button class="sort" data-sort="order:asc">ASC</button>
                  <button class="sort" data-sort="order:desc">DESC</button> -->
                  <!-- <label class="script me-2">
                    <input
                      type="checkbox"
                      condition="XXL"
                      class="btn2"
                      data-filter="ALL"
                      value="off"
                    />
                    <span class="geekmark inside">ALL</span>
                  </label> -->
                </div>
              </div>
              <div class="container text-center mt-4">
                <p>
                  Leave a star on Github if this <br />
                  repository was useful :)
                </p>
                <button class="fw-bold p-2 githubbutton">
                  <i class="fab fa-github"></i><span class="Star">Star</span>
                </button>
              </div>
              <!-- Sizes filter Section Ends  -->
            </div>
            <div class="col-lg-8">
              <!--  -->
              <!-- OrderBy Filter Section Starts  -->
              <div
                class="d-flex flex-row justify-content-start align-items-center"
              >
                <div id="Amount">
                  <!-- <h5 class="OrderBy">X Product's found</h5> -->
                </div>
                <h5
                  class="d-flex align-items-center justify-content-center OrderBy"
                >
                  Order By:&nbsp;

                  <div class="dropdown">
                    <span>Select</span>
                    <div class="dropdown-content">
                      <p class="sort cursor-pointer" data-sort="default">
                        Default
                      </p>
                      <p class="sort cursor-pointer" data-sort="order:asc">
                        Price Low to High
                      </p>
                      <p class="sort cursor-pointer" data-sort="order:desc">
                        Price High to Low
                      </p>
                    </div>
                  </div>
                </h5>
              </div>
              <!-- OrderBy Filter Section Ends  -->
              <!--  -->

              <!-- Product Layout Section Starts  -->
              <!-- 1st Row One  -->
              <section class="mt-4 grid-itemX">
                <div class="items" id="table"></div>
              </section>
              <!-- Product Layout Section Ends  -->
            </div>
            <div class="col-lg-1"></div>
          </div>
        </div>
      </section>
    </div>
    <!-- Main Layout Section Ends -->

    <!-- Footer Section Starts  -->
    <footer id="footer">
      <div class="container">
        <div class="container-fluid p-0">
          <div class="row text-left footer">
            <!-- Bootstrap Column  -->
            <div class="col-md-5 col-sm-5 text-light">
              <h4 class="text-light">IMPORTANT LINKS</h4>
              <div class="mt-5 mb-4 importantlinks">
                <h6 class="text-light">
                  <i class="far fa-star"></i>&nbsp;About Us
                </h6>
                <h6 class="text-light">
                  <i class="far fa-star"></i>&nbsp;Contact Us
                </h6>
                <h6 class="text-light">
                  <i class="far fa-star"></i>&nbsp;Privacy Policy
                </h6>
                <h6 class="text-light">
                  <i class="far fa-star"></i>&nbsp;Terms & Condition
                </h6>
              </div>
              <p class="text-muted Copyright">
                Copyright &copy;2021 All rights resereved.
                <span class="line">Abhishek Verma</span>
              </p>
            </div>
            <div class="col-md-5">
              <div class="container">
                <div class="Newsletter">
                  <h4 class="text-light">Newsletter</h4>
                  <p class="text-muted">Stay Updated</p>
                  <form class="subscribe">
                    <input
                      type="text"
                      placeholder="Your email address"
                      class="p-2 subscribe"
                    />
                    <input
                      type="submit"
                      value="Subscribe"
                      class="subscribebutton p-2"
                    />
                  </form>
                </div>
              </div>
            </div>
            <div class="col-lg-2 col-md-2 col-sm-12 text-start followus">
              <h4 class="text-light">Follow Us</h4>
              <p class="text-muted">Let's be Social</p>
              <div class="d-flex justify-content-between column">
                <i class="fa-2x fab fa-facebook-f"></i>
                <i class="fa-2x fab fa-instagram"></i>
                <i class="fa-2x fab fa-twitter"></i>
                <i class="fa-2x fab fa-linkedin"></i>
                <i class="fa-2x fab fa-youtube-square"></i>
              </div>
            </div>
          </div>
        </div>
      </div>
    </footer>
    <!-- Footer Section Ends  -->

    <!-- Cart Sidebar Starts -->
    <div class="cart-sidebar">
      <span class="cart-close-icon"
        ><i class="fa-2x far fa-window-close"></i
      ></span>
      <div class="cart-title text-center">
        <!-- <div> -->
        <i class="fa-2x fas fa-cart-plus p-2 CartButton"></i
        ><span
          ><button class="BNavbar2">
            <h6 id="BNavbar2H6">0</h6>
          </button></span
        ><span class="Bag">Bag</span>
        <!-- </div> -->
        <!-- <div> -->

        <!-- </div> -->
      </div>
      <div class="cart-body"></div>
      <!-- Subtotal Section starts -->
      <div class="subtotal">
        <div>SUBTOTAL</div>
        <div class="subtotal2">
          <h5 style="color: lightgreen" class="subtotal3">$00.00</h5>
          <h6>OR UP TO 5 x $ 5.89</h6>
        </div>
      </div>
      <!-- Subtotal Section ends -->

      <a href="#" class="cart-btn btn-purchase">CHECKOUT</a>
    </div>
    <!-- Cart Sidebar Ends-->

    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4"
      crossorigin="anonymous"
    ></script>

    <!-- Js for OrderBy Filter  -->
    <script>
      var x, i, j, l, ll, selElmnt, a, b, c;
      /* Look for any elements with the class "custom-select": */
      x = document.getElementsByClassName("custom-select");
      l = x.length;
      for (i = 0; i < l; i++) {
        selElmnt = x[i].getElementsByTagName("select")[0];
        ll = selElmnt.length;
        /* For each element, create a new DIV that will act as the selected item: */
        a = document.createElement("DIV");
        a.setAttribute("class", "select-selected");
        a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
        x[i].appendChild(a);
        /* For each element, create a new DIV that will contain the option list: */
        b = document.createElement("DIV");
        b.setAttribute("class", "select-items select-hide");
        for (j = 1; j < ll; j++) {
          /* For each option in the original select element,
    create a new DIV that will act as an option item: */
          c = document.createElement("DIV");
          c.innerHTML = selElmnt.options[j].innerHTML;
          c.addEventListener("click", function (e) {
            /* When an item is clicked, update the original select box,
        and the selected item: */
            var y, i, k, s, h, sl, yl;
            s = this.parentNode.parentNode.getElementsByTagName("select")[0];
            sl = s.length;
            h = this.parentNode.previousSibling;
            for (i = 0; i < sl; i++) {
              if (s.options[i].innerHTML == this.innerHTML) {
                s.selectedIndex = i;
                h.innerHTML = this.innerHTML;
                y = this.parentNode.getElementsByClassName("same-as-selected");
                yl = y.length;
                for (k = 0; k < yl; k++) {
                  y[k].removeAttribute("class");
                }
                this.setAttribute("class", "same-as-selected");
                break;
              }
            }
            h.click();
          });
          b.appendChild(c);
        }
        x[i].appendChild(b);
        a.addEventListener("click", function (e) {
          /* When the select box is clicked, close any other select boxes,
    and open/close the current select box: */
          e.stopPropagation();
          closeAllSelect(this);
          this.nextSibling.classList.toggle("select-hide");
          this.classList.toggle("select-arrow-active");
        });
      }

      function closeAllSelect(elmnt) {
        /* A function that will close all select boxes in the document,
  except the current select box: */
        var x,
          y,
          i,
          xl,
          yl,
          arrNo = [];
        x = document.getElementsByClassName("select-items");
        y = document.getElementsByClassName("select-selected");
        xl = x.length;
        yl = y.length;
        for (i = 0; i < yl; i++) {
          if (elmnt == y[i]) {
            arrNo.push(i);
          } else {
            y[i].classList.remove("select-arrow-active");
          }
        }
        for (i = 0; i < xl; i++) {
          if (arrNo.indexOf(i)) {
            x[i].classList.add("select-hide");
          }
        }
      }

      /* If the user clicks anywhere outside the select box,
then close all select boxes: */
      document.addEventListener("click", closeAllSelect);
    </script>

    <!-- Option 2: Separate Popper and Bootstrap JS -->
    <!--
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.min.js" integrity="sha384-Atwg2Pkwv9vp0ygtn1JAojH0nYbwNJLPhwyoVbhoPwBhjQPR5VtM2+xf0Uwh9KtT" crossorigin="anonymous"></script>
    -->

    <!-- Font Awesome CDN  -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
      integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <!-- Font Awesome CDN  -->

    <!-- INCLUDING JQUERY-->
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <!-- Including Our Own js file  -->

    <!-- mixItUp Jquery Plugin CDNjs  -->
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/mixitup/3.3.1/mixitup.min.js"
      integrity="sha512-nKZDK+ztK6Ug+2B6DZx+QtgeyAmo9YThZob8O3xgjqhw2IVQdAITFasl/jqbyDwclMkLXFOZRiytnUrXk/PM6A=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>

    <!-- <script src="./Index.js"></script> -->
    <script>
      // console.log("Welcome to the Ecommerce");

      // Here we will pass out JSON data to the Frontend(HTML, CSS, and Js) with the help of Vanilla JavaScript

      // Previously we were doing it with the help of JQuery but now we will be doing it with the help of Vanilla JavaScript

      // fetch("Data.json")
      fetch("http://localhost:3000/json")
        .then(function (response) {
          return response.json();
        })
        .then(function (data) {
          appendData(data);
        })
        .catch(function (err) {
          console.log(err);
        });

      function appendData(data) {
        //   // Js for Calculating total products found
        var amountContainer = document.getElementById("Amount");
        var div2 = document.createElement("div");
        Amount = `<h5 class="OrderBy">${data.length} Product(s) found.</h5>`;
        div2.innerHTML = Amount;
        amountContainer.appendChild(div2);

        //   // Js for displaying all the products from the Data.json file
        var mainContainer = document.getElementById("table");
        for (var i = 0; i < data.length; i++) {
          // append each person to our page
          Image = '"' + data[i].Image + '"';
          Condition = data[i].condition;
          var div = document.createElement("div");
          s = `<div class="item py-2 mix ${Condition} filterDiv" style="width: 150px" data-order = "${data[i].Price1}">
      <div class="product font-rale">
        <a href="#">
          <img src=${Image} alt="product1" class="img-fluid shop-item-image" />
        </a>
        <div class="text-center">
          <h6 class="mt-3 fw-bold shop-item-title">
            ${data[i].Name}
            <br />
            T-Shirt
          </h6>
          <div class="">
            <h1 class="fw-bold line">--</h1>
            <h6 class="fw-bold shop-item-price">$<span class="Price">${data[i].Price1}</span>${data[i].Price2}
            </h6>
            <h6 class="fw-bold text-muted fs-5">or ${data[i].Price3} x $ ${data[i].Price4}</h6>
          </div>
          <button
            type="submit"
            class="btn font-size-12 bg-dark text-white Addtocart fw-bold"
          >
            Add to Cart
          </button>
        </div>
      </div>
    </div>`;
          div.innerHTML = s;
          mainContainer.appendChild(div);
          console.log(s);
        }
        Render();
      }

      function Render() {
        // Js for Filtering
        const btns = document.querySelectorAll(".btn2");
        const filterDiv = document.querySelectorAll(".filterDiv");
        console.log("Welcome");
        console.log(filterDiv);

        for (i = 0; i < btns.length; i++) {
          btns[i].addEventListener("click", (e) => {
            const filter = e.target.dataset.filter;
            const toggle = e.target.value;
            console.log(toggle);
            if (e.target.value == "off") {
              filterDiv.forEach((product) => {
                if (filter === "ALL") {
                  product.style.display = "";
                } else {
                  if (product.classList.contains(filter)) {
                    product.style.display = "";
                  } else {
                    product.style.display = "none";
                  }
                }
              });
              e.target.value = "on";
            } else {
              filterDiv.forEach((product) => {
                product.style.display = "";
              });
              e.target.value = "off";
            }
          });
        }

        // Js for Cart Items
        var cart_btn = document.querySelector(".CartButton");
        var cart_sidebar = document.querySelector(".cart-sidebar");
        var close_icon = document.querySelector(".cart-close-icon");
        cart_btn.onclick = function () {
          cart_sidebar.style.right = "0";
        };

        close_icon.onclick = function () {
          cart_sidebar.style.right = "-400px";
        };

        // Js for Deleting or removing an item from the cart
        var removeCartItemButtons = document.getElementsByClassName(
          "RemoveItemButton"
        );
        for (var i = 0; i < removeCartItemButtons.length; i++) {
          var button = removeCartItemButtons[i];
          button.addEventListener("click", removeCartItem);
        }

        function removeCartItem(event) {
          var buttonClicked = event.target;
          buttonClicked.parentElement.parentElement.parentElement.parentElement.remove();
          UpdateCartBoxValue();
          updateCartTotal();
        }

        // Js for Updating the value of Subtotal
        function updateCartTotal() {
          var cartItemContainer = document.getElementsByClassName(
            "cart-body"
          )[0];
          var cartRows = cartItemContainer.getElementsByClassName("cart-item");
          var total = 0;
          for (var i = 0; i < cartRows.length; i++) {
            var cartRow = cartRows[i];
            var priceElement = cartRow.getElementsByClassName(
              "cart-item-price"
            )[0];
            var quantityElement = cartRow.getElementsByClassName(
              "ItemCounterCart2"
            )[0];
            var price = parseFloat(priceElement.innerText.replace("$", ""));
            var quantity = parseInt(quantityElement.value);
            total1 = price * quantity;
            total = total + total1;
            total = Math.round(total * 100) / 100;
          }
          document.getElementsByClassName("subtotal3")[0].innerText =
            "$" + total;
        }

        // Js for selecting Quantity
        var quantityInputs = document.getElementsByClassName(
          "ItemCounterCart2"
        );
        for (var i = 0; i < quantityInputs.length; i++) {
          var input = quantityInputs[i];
          input.addEventListener("change", quantityChanged);
        }

        // Js for selecting Quantity and Updating the Subtotal
        function quantityChanged(event) {
          var input = event.target;
          updateCartTotal();
        }

        // Js for Add to cart functionality
        var addToCartButtons = document.getElementsByClassName("Addtocart");

        for (var i = 0; i < addToCartButtons.length; i++) {
          var button2 = addToCartButtons[i];
          button2.addEventListener("click", addToCartClicked);
        }

        function addToCartClicked(event) {
          var button2 = event.target;
          var shopItem = button2.parentElement.parentElement.parentElement;
          var title = shopItem.getElementsByClassName("shop-item-title")[0]
            .innerText;

          var price = shopItem.getElementsByClassName("shop-item-price")[0]
            .innerText;

          var imageSrc = shopItem.getElementsByClassName("shop-item-image")[0]
            .src;

          addItemToCart(title, price, imageSrc);
          updateCartTotal();
        }

        function addItemToCart(title, price, imageSrc) {
          var cartRow = document.createElement("div");
          var cartItems = document.getElementsByClassName("cart-body")[0];
          var cartItemNames = cartItems.getElementsByClassName(
            "cart-item-title"
          );
          for (var i = 0; i < cartItemNames.length; i++) {
            if (cartItemNames[i].innerText == title) {
              alert("This item is already added to the Cart");
              return;
            }
          }
          var cartRowContents = `        
  <div class="cart-item">
  <div class="row">
    <div class="col-lg-2 col-md-2 ">
      <div class="cart-img">
        <img
          src="${imageSrc}"
          alt=""
          style="width: 40px !important; height: 90px !important,"
        />
      </div>
    </div>
    <div class="col-lg-8 col-md-8 ">
      <h6 class="text-white">${title}</h6>
      <h6 style="color: gray !important">Lorem ipsum dolor sit.</h6>
      <h6 style="color: gray !important" class="item-quantity">
        Quantity: 1
      </h6>
    </div>
    <div class="col-lg-2 col-md-2 ">
      <h6 class="cart-item-price" style="color: lightgreen">${price}</h6>
      <div>
      <input
      type="number"
      class="ItemCounterCart ItemCounterCart2"
      value="1"
    />
      </div>
      <div class="RemoveItem">
        <i class="fas fa-trash-alt RemoveItemButton"></i>
      </div>
    </div>
  </div>
</div>`;
          cartRow.innerHTML = cartRowContents;
          cartItems.append(cartRow);
          cartRow
            .getElementsByClassName("RemoveItemButton")[0]
            .addEventListener("click", removeCartItem);
          cartRow
            .getElementsByClassName("ItemCounterCart2")[0]
            .addEventListener("change", quantityChanged);

          UpdateCartBoxValue();
        }

        // Js for checkout button in the Cart Section
        document
          .getElementsByClassName("btn-purchase")[0]
          .addEventListener("click", purchaseClicked);

        function purchaseClicked() {
          alert("Thanks you for shopping");
          var cartItems = document.getElementsByClassName("cart-body")[0];
          while (cartItems.hasChildNodes()) {
            cartItems.removeChild(cartItems.firstChild);
          }
          updateCartTotal();
          UpdateCartBoxValue();
        }

        // Function to update the value inside the FontAwesome Cart Icon
        function UpdateCartBoxValue() {
          var New = document.getElementById("BNavbar2H6");
          var New2 = document.getElementById("BNavbar2H62");
          New.innerText = document.getElementsByClassName("cart-item").length;
          New2.innerText = document.getElementsByClassName("cart-item").length;
        }

        // JQuery for Sorting items on the basis of Price
        $(document).ready(function () {
          var mixer = mixitup(".items");
        });

        // Implemented Sorting Using Mixitup Jquery Plugin -> Layout Issue
      }
    </script>
  </body>
</html>

<!-- Adding mix class to elements  -->
